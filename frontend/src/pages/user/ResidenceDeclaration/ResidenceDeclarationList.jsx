import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import { toast } from "react-toastify";
import Header from "../../../../components/header";
import { useAuth } from "../../../../context/authContext";

const ResidenceDeclarationList = () => {
  const { user, logout } = useAuth();
  const [declarations, setDeclarations] = useState([]);
  const [searchText, setSearchText] = useState("");
  const [filterStatus, setFilterStatus] = useState("all");

  const fetchDeclarations = async () => {
    try {
      const token = localStorage.getItem("token");
      const res = await fetch(
        `${import.meta.env.VITE_API_URL}/api/residence-declaration/my-declarations`,
        { headers: { Authorization: `Bearer ${token}` } }
      );

      const data = await res.json();
      if (!res.ok) throw new Error(data.message || "L·ªói t·∫£i d·ªØ li·ªáu");
      setDeclarations(data.data || []);
    } catch (err) {
      toast.error(`‚ùå ${err.message}`);
    }
  };

  useEffect(() => {
    fetchDeclarations();
  }, []);

  return (
    <div className="bg-light min-vh-100">
      <Header user={user} name={user?.name} logout={logout} />
      <div className="container py-5">
        <div className="d-flex justify-content-between align-items-center mb-4">
          <h2 className="fw-bold text-primary m-0">
            H·ªì s∆° t·∫°m tr√∫ / t·∫°m v·∫Øng c·ªßa t√¥i
          </h2>
          {/* üîπ N√∫t ƒëƒÉng k√Ω */}
          <Link
            to="/residence-declaration"
            className="btn btn-success rounded-pill fw-semibold"
          >
            + ƒêƒÉng k√Ω t·∫°m tr√∫-t·∫°m v·∫Øng
          </Link>
        </div>

        {/* B·ªô l·ªçc */}
        <div className="row mb-4">
          <div className="col-md-4 mb-2">
            <input
              type="text"
              className="form-control"
              placeholder="üîç T√¨m theo t√™n..."
              value={searchText}
              onChange={(e) => setSearchText(e.target.value)}
            />
          </div>
          <div className="col-md-3 mb-2">
            <select
              className="form-select"
              value={filterStatus}
              onChange={(e) => setFilterStatus(e.target.value)}
            >
              <option value="all">T·∫•t c·∫£ tr·∫°ng th√°i</option>
              <option value="pending">üü° Ch·ªù duy·ªát</option>
              <option value="true">‚úÖ ƒê√£ duy·ªát</option>
              <option value="false">‚ùå ƒê√£ t·ª´ ch·ªëi</option>
            </select>
          </div>
          <div className="col-md-2 mb-2">
            <button
              className="btn btn-outline-secondary w-100"
              onClick={() => {
                setSearchText("");
                setFilterStatus("all");
              }}
            >
              üîÑ X√≥a l·ªçc
            </button>
          </div>
        </div>

        {/* Danh s√°ch */}
        <div className="table-responsive">
          <table className="table table-bordered align-middle">
            <thead className="table-primary">
              <tr>
                <th>H·ªç t√™n</th>
                <th>Ng√†y sinh</th>
                <th>Gi·ªõi t√≠nh</th>
                <th>CƒÉn h·ªô</th>
                <th>Quan h·ªá</th>
                <th>Th·ªùi gian</th>
                <th>Gi·∫•y t·ªù</th>
                <th>Tr·∫°ng th√°i</th>
                <th>L√Ω do t·ª´ ch·ªëi</th>
                <th>H√†nh ƒë·ªông</th>
              </tr>
            </thead>
            <tbody>
              {declarations
                .filter((d) =>
                  d.fullName?.toLowerCase().includes(searchText.toLowerCase())
                )
                .filter((d) =>
                  filterStatus === "all"
                    ? true
                    : d.verifiedByStaff === filterStatus
                )
                .map((d) => (
                  <tr key={d._id}>
                    <td>{d.fullName}</td>
                    <td>
                      {d.dateOfBirth &&
                        new Date(d.dateOfBirth).toLocaleDateString("vi-VN")}
                    </td>
                    <td>{d.gender}</td>
                    <td>{d.apartmentId?.apartmentCode || "‚Äî"}</td>
                    <td>{d.relationWithOwner}</td>
                    <td>
                      {d.startDate
                        ? new Date(d.startDate).toLocaleDateString("vi-VN")
                        : "‚Äî"}{" "}
                      ‚Üí{" "}
                      {d.endDate
                        ? new Date(d.endDate).toLocaleDateString("vi-VN")
                        : "‚Äî"}
                    </td>
                    <td>
                      {d.documentImage && (
                        <a
                          href={d.documentImage}
                          target="_blank"
                          rel="noopener noreferrer"
                          className="btn btn-sm btn-outline-primary"
                        >
                          Xem ·∫£nh
                        </a>
                      )}
                    </td>
                    <td>
                      {d.verifiedByStaff === "true" ? (
                        <span className="badge bg-success">‚úÖ ƒê√£ duy·ªát</span>
                      ) : d.verifiedByStaff === "false" ? (
                        <span className="badge bg-danger">‚ùå T·ª´ ch·ªëi</span>
                      ) : (
                        <span className="badge bg-warning text-dark">
                          üü° Ch·ªù duy·ªát
                        </span>
                      )}
                    </td>
                    <td>
                      {d.verifiedByStaff === "false" && d.rejectReason && (
                        <span className="text-danger fw-bold">
                          {d.rejectReason}
                        </span>
                      )}
                    </td>
                    <td>
                      {/* üîπ N√∫t xem chi ti·∫øt */}
                      <Link
                        to={`/residence-declaration/detail/${d._id}`}
                        className="btn btn-primary btn-sm rounded-pill"
                      >
                        Xem chi ti·∫øt
                      </Link>
                    </td>
                  </tr>
                ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};

export default ResidenceDeclarationList;
