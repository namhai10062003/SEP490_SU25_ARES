import cron from 'node-cron';
import Notification from '../models/Notification.js';
import Post from '../models/Post.js';

// üïí Cron: Ch·∫°y m·ªói ph√∫t ƒë·ªÉ test, khi deploy ƒë·ªïi th√†nh '0 0 * * *' (00:00 h√†ng ng√†y)
cron.schedule('*/1 * * * *', async () => {
  const nowUTC = new Date();
  const vietnamOffsetMs = 7 * 60 * 60 * 1000; // UTC+7
  const nowVN = new Date(nowUTC.getTime() + vietnamOffsetMs);

  console.log('‚è∞ CRON ch·∫°y gi·ªù VN:', nowVN.toLocaleString());

  // 1Ô∏è‚É£ B√†i vi·∫øt s·∫Øp h·∫øt h·∫°n (c√≤n 1 ng√†y)
  const tomorrow = new Date(nowVN.getTime() + 24 * 60 * 60 * 1000);

  const almostExpiredPosts = await Post.find({
    status: 'approved',
    expiredDate: {
      $gt: nowVN,       // ch∆∞a h·∫øt h·∫°n
      $lte: tomorrow,   // <= 1 ng√†y
    },
  });

  for (const post of almostExpiredPosts) {
    const notifyTitle = 'B√†i vi·∫øt s·∫Øp h·∫øt h·∫°n';
    const notifyMessage = `B√†i vi·∫øt "${post.title}" s·∫Ω h·∫øt h·∫°n v√†o ng√†y ${post.expiredDate.toLocaleDateString('vi-VN')}`;

    await Notification.create({
      userId: post.contactInfo,   // üëà ch·ªß b√†i vi·∫øt
      title: notifyTitle,
      message: notifyMessage,
      data: {
        postId: post._id,
      },
    });

    console.log(`üì¢ Th√¥ng b√°o s·∫Øp h·∫øt h·∫°n cho b√†i: ${post._id}`);
  }

  // 2Ô∏è‚É£ B√†i vi·∫øt ƒë√£ h·∫øt h·∫°n
  const result = await Post.updateMany(
    { status: 'approved', expiredDate: { $lte: nowVN } },
    { $set: { status: 'expired' } }
  );

  if (result.modifiedCount > 0) {
    const expiredPosts = await Post.find({
      status: 'expired',
      expiredDate: { $lte: nowVN },
    });

    for (const post of expiredPosts) {
      const notifyTitle = 'B√†i vi·∫øt ƒë√£ h·∫øt h·∫°n';
      const notifyMessage = `B√†i vi·∫øt "${post.title}"ƒë√£ h·∫øt h·∫°n v√†o ng√†y ${post.expiredDate.toLocaleDateString('vi-VN')}`;

      await Notification.create({
        userId: post.contactInfo,   // üëà ch·ªß b√†i vi·∫øt
        title: notifyTitle,
        message: notifyMessage,
        data: {
          postId: post._id,
        },
      });

      console.log(`üì¢ Th√¥ng b√°o h·∫øt h·∫°n cho b√†i: ${post._id}`);
    }
  }

  console.log(`üîÅ CRON: C·∫≠p nh·∫≠t ${result.modifiedCount} b√†i h·∫øt h·∫°n.`);
});
