import { emitNotification } from "../helpers/socketHelper.js";
import Like from "../models/Like.js";
import Notification from "../models/Notification.js";
import Post from "../models/Post.js";
// danh sach b√†i post ƒë√£ like 

export const getLikedPostsByUser = async (req, res) => {
  try {
    const userId = req.user.id;

    // T√¨m t·∫•t c·∫£ like c·ªßa user, populate b√†i ƒëƒÉng v√† g√≥i b√†i ƒëƒÉng
    const likes = await Like.find({ user: userId }).populate({
      path: "post",
      populate: { path: "postPackage" },
    });

    const currentDate = new Date();

    // L·ªçc b√†i ƒëƒÉng c√≤n t·ªìn t·∫°i v√† ch∆∞a h·∫øt h·∫°n theo expiredDate
    const likedPosts = likes
      .map((like) => like.post)
      .filter(
        (post) =>
          post !== null &&
          (!post.expiredDate || new Date(post.expiredDate) > currentDate)
      );

    res.status(200).json({ success: true, data: likedPosts });
  } catch (err) {
    console.error("L·ªói khi l·∫•y liked posts:", err);
    res.status(500).json({ success: false, message: "L·ªói server" });
  }
};



export const toggleLike = async (req, res) => {
  try {
    const { postId } = req.params;

    // Guest th√¨ ch·∫∑n
    if (!req.user) {
      return res.status(401).json({
        success: false,
        message: "‚ö†Ô∏è Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ like b√†i vi·∫øt",
      });
    }

    const userId = req.user._id;

    // T√¨m xem ƒë√£ like ch∆∞a
    const existing = await Like.findOne({ post: postId, user: userId });

    if (existing) {
      // N·∫øu ƒë√£ like th√¨ b·ªè like
      await existing.deleteOne();

      // ƒê·∫øm l·∫°i t·ªïng s·ªë like
      const likeCount = await Like.countDocuments({ post: postId });

      return res.json({
        success: true,
        liked: false,
        likeCount,
        message: "ƒê√£ b·ªè like",
      });
    }

    // N·∫øu ch∆∞a like th√¨ th√™m m·ªõi
    await Like.create({ post: postId, user: userId });

    // ƒê·∫øm l·∫°i t·ªïng s·ªë like
    const likeCount = await Like.countDocuments({ post: postId });

    // T√¨m ch·ªß b√†i vi·∫øt ƒë·ªÉ t·∫°o th√¥ng b√°o
    const post = await Post.findById(postId).populate("contactInfo");
    const postOwnerId = post?.contactInfo?._id;

    if (postOwnerId) {
      const newNotification = await Notification.create({
        userId: postOwnerId,
        message: `B√†i ƒëƒÉng "${post.title}" c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c th√≠ch üëç.`,
      });

      emitNotification(postOwnerId, newNotification);
    }

    res.json({
      success: true,
      liked: true,
      likeCount,
      message: "ƒê√£ like b√†i vi·∫øt",
    });
  } catch (err) {
    res.status(500).json({
      success: false,
      message: "Like th·∫•t b·∫°i",
      error: err.message,
    });
  }
};



export const checkIfLiked = async (req, res) => {
  try {
    const { postId } = req.params;

    // N·∫øu ch∆∞a login (guest)
    if (!req.user) {
      return res.json({ success: true, liked: false });
    }

    const userId = req.user._id;

    const like = await Like.findOne({ post: postId, user: userId });

    res.json({ success: true, liked: !!like });
  } catch (err) {
    res.status(500).json({
      success: false,
      message: "L·ªói ki·ªÉm tra like",
      error: err.message
    });
  }
};
